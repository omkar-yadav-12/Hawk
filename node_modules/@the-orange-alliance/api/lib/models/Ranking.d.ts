import { ISerializable } from './ISerializable';
import Team from './Team';
export default class Ranking implements ISerializable {
    private _rankKey;
    private _eventKey;
    private _teamKey;
    private _teamNumber;
    private _rank;
    private _rankChange;
    private _opr;
    private _wins;
    private _losses;
    private _ties;
    private _highestQualScore;
    private _rankingPoints;
    private _qualifyingPoints;
    private _tieBreakerPoints;
    private _disqualified;
    private _played;
    private _team;
    constructor();
    toJSON(): object;
    fromJSON(json: any): Ranking;
    get rankKey(): string;
    set rankKey(value: string);
    get eventKey(): string;
    set eventKey(value: string);
    get teamKey(): string;
    set teamKey(value: string);
    get teamNumber(): number;
    set teamNumber(value: number);
    get rank(): number;
    set rank(value: number);
    get rankChange(): number;
    set rankChange(value: number);
    get opr(): number;
    set opr(value: number);
    get wins(): number;
    set wins(value: number);
    get losses(): number;
    set losses(value: number);
    get ties(): number;
    set ties(value: number);
    get highestQualScore(): number;
    set highestQualScore(value: number);
    get rankingPoints(): number;
    set rankingPoints(value: number);
    get qualifyingPoints(): number;
    set qualifyingPoints(value: number);
    get tieBreakerPoints(): number;
    set tieBreakerPoints(value: number);
    get disqualified(): number;
    set disqualified(value: number);
    get played(): number;
    set played(value: number);
    get team(): Team;
    set team(value: Team);
}
